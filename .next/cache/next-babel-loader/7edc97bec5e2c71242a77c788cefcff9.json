{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ged-it\\\\Documents\\\\GitHub\\\\signup-landing\\\\src\\\\components\\\\Form.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Fragment } from \"react\";\nimport styled from \"styled-components\";\nimport StyledTerms from \"./styles/StyledTerms\";\n\nclass Form extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      first_name: \"\",\n      last_name: \"\",\n      email: \"\",\n      password: \"\",\n      error: [null, null, null, null]\n    });\n\n    _defineProperty(this, \"handleSubmit\", e => {\n      e.preventDefault();\n      if (e.target.checkValidity()) this.clearForm();\n    });\n\n    _defineProperty(this, \"clearForm\", () => this.setState({\n      first_name: \"\",\n      last_name: \"\",\n      email: \"\",\n      password: \"\",\n      errors: [null, null, null, null]\n    }));\n\n    _defineProperty(this, \"saveToState\", e => {\n      const errors = this.state.errors;\n      if (e.target.checkValidity()) errors.splice(e.target.id, 1, true);else errors.splice(e.target.id, 1, false);\n      this.setState({\n        errors\n      });\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    });\n  }\n\n  render() {\n    return __jsx(StyledForm, {\n      method: \"post\",\n      noValidate: true,\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, __jsx(\"input\", {\n      type: \"text\",\n      name: \"first_name\",\n      required: true,\n      id: \"0\",\n      error: this.state.error[0],\n      value: this.state.first_name,\n      placeholder: \"First Name\",\n      onChange: this.saveToState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }), __jsx(\"div\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }, \"First Name cannot be empty\")), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, __jsx(\"input\", {\n      type: \"text\",\n      name: \"last_name\",\n      required: true,\n      id: \"1\",\n      error: this.state.error[1],\n      value: this.state.last_name,\n      placeholder: \"Last Name\",\n      onChange: this.saveToState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }), __jsx(\"div\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, \"Last Name cannot be empty\")), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, __jsx(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      required: true,\n      id: \"2\",\n      error: this.state.error[2],\n      value: this.state.email,\n      placeholder: \"Email\",\n      onChange: this.saveToState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }), __jsx(\"div\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, \"Looks like this is not an email\")), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, __jsx(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      required: true,\n      id: \"3\",\n      error: this.state.error[3],\n      pattern: \"^(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z])(?!.*\\\\s).*$\",\n      title: \"Please include at least 1 uppercase character, 1 lowercase character, and 1 number.\",\n      autoComplete: \"suggested-password\",\n      value: this.state.password,\n      placeholder: \"Password\",\n      onChange: this.saveToState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }), __jsx(\"div\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }, \"Password cannot be empty\")), __jsx(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, \"Claim your free Trial\"), __jsx(StyledTerms, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, \"By clicking the button you are agreeing to our\", \" \", __jsx(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, \"Terms and Services\")));\n  }\n\n} //   /* input:invalid::placeholder {\n//     color: ${(props) => props.theme.red};\n//   } */\n//   input:invalid {\n//     border: 2px solid ${(props) => props.theme.red};\n//   }\n//   input:invalid + .error {\n//     opacity: 1;\n//   }\n//   }\n\n\nconst StyledForm = styled.form.withConfig({\n  displayName: \"Form__StyledForm\",\n  componentId: \"sc-11jr08r-0\"\n})([\"display:grid;grid-template-rows:1fr;grid-gap:25px;place-items:center;width:70%;min-width:250px;margin:0 auto;background:white;padding:20px;border-radius:10px;box-shadow:0 6px rgba(0,0,0,0.3);div{width:100%;.error{font-size:1rem;text-align:end;opacity:0;color:\", \";}input,button{padding:10px;border-radius:5px;}input:invalid{border:2px solid \", \";background:url(\\\"/icon-error.svg\\\");background-size:20px;background-repeat:no-repeat;background-position:90%;}input{width:100%;border:2px solid \", \";}input:active,input:focus{border:2px solid \", \";}button{width:100%;text-transform:uppercase;background:\", \";color:white;box-shadow:inset 0 -5px hsl(154,59%,41%);border:1px solid transparent;cursor:pointer;:active{box-shadow:inset 0 -2px hsl(154,59%,41%);transform:translateY(2px);}}\"], props => props.theme.red, props => props.theme.red, props => props.error ? props.theme.red : props.theme.grayishBlue, props => props.error ? props.theme.red : props.theme.grayishBlue, props => props.theme.green);\nexport default Form;","map":{"version":3,"sources":["C:/Users/ged-it/Documents/GitHub/signup-landing/src/components/Form.js"],"names":["React","Fragment","styled","StyledTerms","Form","Component","first_name","last_name","email","password","error","e","preventDefault","target","checkValidity","clearForm","setState","errors","state","splice","id","name","value","render","handleSubmit","saveToState","StyledForm","form","props","theme","red","grayishBlue","green"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport StyledTerms from \"./styles/StyledTerms\";\r\nclass Form extends React.Component {\r\n  state = {\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    error: [null, null, null, null],\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (e.target.checkValidity()) this.clearForm();\r\n  };\r\n  clearForm = () =>\r\n    this.setState({\r\n      first_name: \"\",\r\n      last_name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      errors: [null, null, null, null],\r\n    });\r\n  saveToState = (e) => {\r\n    const errors = this.state.errors;\r\n    if (e.target.checkValidity()) errors.splice(e.target.id, 1, true);\r\n    else errors.splice(e.target.id, 1, false);\r\n    this.setState({ errors });\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  render() {\r\n    return (\r\n      <StyledForm method=\"post\" noValidate onSubmit={this.handleSubmit}>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            name=\"first_name\"\r\n            required\r\n            id=\"0\"\r\n            error={this.state.error[0]}\r\n            value={this.state.first_name}\r\n            placeholder=\"First Name\"\r\n            onChange={this.saveToState}\r\n          />\r\n          <div className={\"error\"}>First Name cannot be empty</div>\r\n        </div>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            name=\"last_name\"\r\n            required\r\n            id=\"1\"\r\n            error={this.state.error[1]}\r\n            value={this.state.last_name}\r\n            placeholder=\"Last Name\"\r\n            onChange={this.saveToState}\r\n          />\r\n          <div className={\"error\"}>Last Name cannot be empty</div>\r\n        </div>\r\n\r\n        <div>\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            required\r\n            id=\"2\"\r\n            error={this.state.error[2]}\r\n            value={this.state.email}\r\n            placeholder=\"Email\"\r\n            onChange={this.saveToState}\r\n          />\r\n          <div className={\"error\"}>Looks like this is not an email</div>\r\n        </div>\r\n        <div>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            required\r\n            id=\"3\"\r\n            error={this.state.error[3]}\r\n            pattern=\"^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?!.*\\s).*$\"\r\n            title=\"Please include at least 1 uppercase character, 1 lowercase character, and 1 number.\"\r\n            autoComplete=\"suggested-password\"\r\n            value={this.state.password}\r\n            placeholder={\"Password\"}\r\n            onChange={this.saveToState}\r\n          />\r\n          <div className=\"error\">Password cannot be empty</div>\r\n        </div>\r\n\r\n        <button type=\"submit\">Claim your free Trial</button>\r\n        <StyledTerms>\r\n          By clicking the button you are agreeing to our{\" \"}\r\n          <a>Terms and Services</a>\r\n        </StyledTerms>\r\n      </StyledForm>\r\n    );\r\n  }\r\n}\r\n//   /* input:invalid::placeholder {\r\n//     color: ${(props) => props.theme.red};\r\n//   } */\r\n//   input:invalid {\r\n//     border: 2px solid ${(props) => props.theme.red};\r\n//   }\r\n//   input:invalid + .error {\r\n//     opacity: 1;\r\n//   }\r\n//   }\r\n\r\nconst StyledForm = styled.form`\r\n  display: grid;\r\n  grid-template-rows: 1fr;\r\n  grid-gap: 25px;\r\n  place-items: center;\r\n  width: 70%;\r\n  min-width: 250px;\r\n  margin: 0 auto;\r\n  background: white;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  box-shadow: 0 6px rgba(0, 0, 0, 0.3);\r\n  div {\r\n    width: 100%;\r\n    .error {\r\n      font-size: 1rem;\r\n      text-align: end;\r\n      opacity: 0;\r\n      color: ${(props) => props.theme.red};\r\n    }\r\n\r\n  input,\r\n  button {\r\n    padding: 10px;\r\n    border-radius: 5px;\r\n  }\r\n\r\n  input:invalid {\r\n    border: 2px solid ${(props) => props.theme.red};\r\n    background: url(\"/icon-error.svg\");\r\n    background-size: 20px;\r\n    background-repeat: no-repeat;\r\n    background-position: 90%;\r\n  }\r\n\r\n  input {\r\n    width: 100%;\r\n    border: 2px solid\r\n      ${(props) => (props.error ? props.theme.red : props.theme.grayishBlue)};\r\n  }\r\n\r\n  input:active,\r\n  input:focus {\r\n    border: 2px solid\r\n      ${(props) => (props.error ? props.theme.red : props.theme.grayishBlue)};\r\n  }\r\n  button {\r\n    width: 100%;\r\n    text-transform: uppercase;\r\n    background: ${(props) => props.theme.green};\r\n    color: white;\r\n    box-shadow: inset 0 -5px hsl(154, 59%, 41%);\r\n    border: 1px solid transparent;\r\n    cursor: pointer;\r\n    :active {\r\n      box-shadow: inset 0 -2px hsl(154, 59%, 41%);\r\n      transform: translateY(2px);\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Form;\r\n"]},"metadata":{},"sourceType":"module"}