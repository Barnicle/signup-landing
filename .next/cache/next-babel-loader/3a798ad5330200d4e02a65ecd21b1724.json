{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\ged-it\\\\Documents\\\\GitHub\\\\signup-landing\\\\src\\\\components\\\\Form.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Fragment } from \"react\";\nimport styled from \"styled-components\";\nimport StyledTerms from \"./styles/StyledTerms\";\n\nvar Form = /*#__PURE__*/function (_React$Component) {\n  _inherits(Form, _React$Component);\n\n  var _super = _createSuper(Form);\n\n  function Form() {\n    var _this;\n\n    _classCallCheck(this, Form);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      first_name: \"\",\n      last_name: \"\",\n      email: \"\",\n      password: \"\",\n      errors: [\"true\", \"true\", \"true\", \"true\"]\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", function (e) {\n      e.preventDefault();\n\n      if (e.target.checkValidity()) {\n        _this.clearForm();\n\n        return;\n      }\n\n      document.querySelectorAll(\"input\").forEach(function (el) {\n        var errors = _this.state.errors;\n        if (el.checkValidity()) errors.splice(el.id, 1, \"false\");else errors.splice(el.id, 1, \"true\");\n        console.log(errors);\n\n        _this.setState({\n          errors: errors\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"clearForm\", function () {\n      return _this.setState({\n        first_name: \"\",\n        last_name: \"\",\n        email: \"\",\n        password: \"\",\n        errors: [false, false, false, false]\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"saveToState\", function (e) {\n      var errors = _this.state.errors;\n      if (e.target.checkValidity()) errors.splice(e.target.id, 1, false);else errors.splice(e.target.id, 1, true);\n\n      _this.setState({\n        errors: errors\n      });\n\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    });\n\n    return _this;\n  }\n\n  _createClass(Form, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(StyledForm, {\n        method: \"post\",\n        noValidate: true,\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 7\n        }\n      }, __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }\n      }, __jsx(\"input\", {\n        type: \"text\",\n        name: \"first_name\",\n        required: true,\n        id: \"0\",\n        error: this.state.errors[0],\n        value: this.state.first_name,\n        placeholder: \"First Name\",\n        onChange: this.saveToState,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }\n      }), __jsx(\"div\", {\n        className: \"error\",\n        error: this.state.errors[0],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }\n      }, \"First Name cannot be empty\")), __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }\n      }, __jsx(\"input\", {\n        type: \"text\",\n        name: \"last_name\",\n        required: true,\n        id: \"1\",\n        error: this.state.errors[1],\n        value: this.state.last_name,\n        placeholder: \"Last Name\",\n        onChange: this.saveToState,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }\n      }), __jsx(\"div\", {\n        className: \"error\",\n        error: this.state.errors[1],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }\n      }, \"Last Name cannot be empty\")), __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }\n      }, __jsx(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        required: true,\n        id: \"2\",\n        error: this.state.errors[2],\n        value: this.state.email,\n        placeholder: \"Email\",\n        onChange: this.saveToState,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }\n      }), __jsx(\"div\", {\n        className: \"error\",\n        error: this.state.errors[2],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }\n      }, \"Looks like this is not an email\")), __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }\n      }, __jsx(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        required: true,\n        id: \"3\",\n        error: this.state.errors[3],\n        pattern: \"^(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z])(?!.*\\\\s).*$\",\n        title: \"Please include at least 1 uppercase character, 1 lowercase character, and 1 number.\",\n        autoComplete: \"suggested-password\",\n        value: this.state.password,\n        placeholder: \"Password\",\n        onChange: this.saveToState,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }\n      }), __jsx(\"div\", {\n        className: \"error\",\n        error: this.state.errors[3],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }\n      }, \"Password cannot be empty\")), __jsx(\"button\", {\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 9\n        }\n      }, \"Claim your free Trial\"), __jsx(StyledTerms, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 9\n        }\n      }, \"By clicking the button you are agreeing to our\", \" \", __jsx(\"a\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }\n      }, \"Terms and Services\")));\n    }\n  }]);\n\n  return Form;\n}(React.Component);\n\nvar StyledInput = styled.input.withConfig({\n  displayName: \"Form__StyledInput\",\n  componentId: \"sc-11jr08r-0\"\n})([\":invalid::placeholder{color:\", \";}:invalid{background:\", \";background-size:20px;background-repeat:no-repeat;background-position:90%;}\"], function (props) {\n  return props.error === \"true\" ? props.theme.red : \"green\";\n}, function (props) {\n  return props.error === \"true\" ? url(\"/icon-error.svg\") : \"\";\n});\nvar StyledForm = styled.form.withConfig({\n  displayName: \"Form__StyledForm\",\n  componentId: \"sc-11jr08r-1\"\n})([\"display:grid;grid-template-rows:1fr;grid-gap:25px;place-items:center;width:70%;min-width:250px;margin:0 auto;background:white;padding:20px;border-radius:10px;box-shadow:0 6px rgba(0,0,0,0.3);div{width:100%;.error{font-size:1rem;text-align:end;opacity:\", \";color:\", \";}}input,button{padding:10px;border-radius:5px;}input{width:100%;border:2px solid \", \";}button{width:100%;text-transform:uppercase;background:\", \";color:white;box-shadow:inset 0 -5px hsl(154,59%,41%);border:1px solid transparent;cursor:pointer;:active{box-shadow:inset 0 -2px hsl(154,59%,41%);transform:translateY(2px);}}\"], function (props) {\n  return props.error ? 1 : 0;\n}, function (props) {\n  return props.theme.red;\n}, function (props) {\n  return props.error ? props.theme.red : props.theme.grayishBlue;\n}, function (props) {\n  return props.theme.green;\n});\n_c = StyledForm;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"StyledForm\");","map":{"version":3,"sources":["C:/Users/ged-it/Documents/GitHub/signup-landing/src/components/Form.js"],"names":["React","Fragment","styled","StyledTerms","Form","first_name","last_name","email","password","errors","e","preventDefault","target","checkValidity","clearForm","document","querySelectorAll","forEach","el","state","splice","id","console","log","setState","name","value","handleSubmit","saveToState","Component","StyledInput","input","props","error","theme","red","url","StyledForm","form","grayishBlue","green"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport StyledTerms from \"./styles/StyledTerms\";\r\nclass Form extends React.Component {\r\n  state = {\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    errors: [\"true\", \"true\", \"true\", \"true\"],\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (e.target.checkValidity()) {\r\n      this.clearForm();\r\n      return;\r\n    }\r\n    document.querySelectorAll(\"input\").forEach((el) => {\r\n      const errors = this.state.errors;\r\n      if (el.checkValidity()) errors.splice(el.id, 1, \"false\");\r\n      else errors.splice(el.id, 1, \"true\");\r\n      console.log(errors);\r\n      this.setState({ errors });\r\n    });\r\n  };\r\n  clearForm = () =>\r\n    this.setState({\r\n      first_name: \"\",\r\n      last_name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      errors: [false, false, false, false],\r\n    });\r\n  saveToState = (e) => {\r\n    const errors = this.state.errors;\r\n    if (e.target.checkValidity()) errors.splice(e.target.id, 1, false);\r\n    else errors.splice(e.target.id, 1, true);\r\n    this.setState({ errors });\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  render() {\r\n    return (\r\n      <StyledForm method=\"post\" noValidate onSubmit={this.handleSubmit}>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            name=\"first_name\"\r\n            required\r\n            id=\"0\"\r\n            error={this.state.errors[0]}\r\n            value={this.state.first_name}\r\n            placeholder=\"First Name\"\r\n            onChange={this.saveToState}\r\n          />\r\n          <div className={\"error\"} error={this.state.errors[0]}>\r\n            First Name cannot be empty\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            name=\"last_name\"\r\n            required\r\n            id=\"1\"\r\n            error={this.state.errors[1]}\r\n            value={this.state.last_name}\r\n            placeholder=\"Last Name\"\r\n            onChange={this.saveToState}\r\n          />\r\n          <div className={\"error\"} error={this.state.errors[1]}>\r\n            Last Name cannot be empty\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            required\r\n            id=\"2\"\r\n            error={this.state.errors[2]}\r\n            value={this.state.email}\r\n            placeholder=\"Email\"\r\n            onChange={this.saveToState}\r\n          />\r\n          <div className={\"error\"} error={this.state.errors[2]}>\r\n            Looks like this is not an email\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            required\r\n            id=\"3\"\r\n            error={this.state.errors[3]}\r\n            pattern=\"^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?!.*\\s).*$\"\r\n            title=\"Please include at least 1 uppercase character, 1 lowercase character, and 1 number.\"\r\n            autoComplete=\"suggested-password\"\r\n            value={this.state.password}\r\n            placeholder={\"Password\"}\r\n            onChange={this.saveToState}\r\n          />\r\n          <div className=\"error\" error={this.state.errors[3]}>\r\n            Password cannot be empty\r\n          </div>\r\n        </div>\r\n\r\n        <button type=\"submit\">Claim your free Trial</button>\r\n        <StyledTerms>\r\n          By clicking the button you are agreeing to our{\" \"}\r\n          <a>Terms and Services</a>\r\n        </StyledTerms>\r\n      </StyledForm>\r\n    );\r\n  }\r\n}\r\nconst StyledInput = styled.input`\r\n  :invalid::placeholder {\r\n    color: ${(props) => (props.error === \"true\" ? props.theme.red : \"green\")};\r\n  }\r\n  :invalid {\r\n    background: ${(props) =>\r\n      props.error === \"true\" ? url(\"/icon-error.svg\") : \"\"};\r\n    background-size: 20px;\r\n    background-repeat: no-repeat;\r\n    background-position: 90%;\r\n  }\r\n`;\r\nconst StyledForm = styled.form`\r\n  display: grid;\r\n  grid-template-rows: 1fr;\r\n  grid-gap: 25px;\r\n  place-items: center;\r\n  width: 70%;\r\n  min-width: 250px;\r\n  margin: 0 auto;\r\n  background: white;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  box-shadow: 0 6px rgba(0, 0, 0, 0.3);\r\n  div {\r\n    width: 100%;\r\n    .error {\r\n      font-size: 1rem;\r\n      text-align: end;\r\n      opacity: ${(props) => (props.error ? 1 : 0)};\r\n      color: ${(props) => props.theme.red};\r\n    }\r\n  }\r\n\r\n  input,\r\n  button {\r\n    padding: 10px;\r\n    border-radius: 5px;\r\n  }\r\n\r\n  input {\r\n    width: 100%;\r\n    border: 2px solid\r\n      ${(props) => (props.error ? props.theme.red : props.theme.grayishBlue)};\r\n  }\r\n\r\n  button {\r\n    width: 100%;\r\n    text-transform: uppercase;\r\n    background: ${(props) => props.theme.green};\r\n    color: white;\r\n    box-shadow: inset 0 -5px hsl(154, 59%, 41%);\r\n    border: 1px solid transparent;\r\n    cursor: pointer;\r\n    :active {\r\n      box-shadow: inset 0 -2px hsl(154, 59%, 41%);\r\n      transform: translateY(2px);\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Form;\r\n"]},"metadata":{},"sourceType":"module"}