{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ged-it\\\\Documents\\\\GitHub\\\\signup-landing\\\\src\\\\components\\\\Form.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Fragment } from \"react\";\nimport styled from \"styled-components\";\nimport StyledTerms from \"./styles/StyledTerms\";\n\nclass Form extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      first_name: \"\",\n      last_name: \"\",\n      email: \"\",\n      password: \"\"\n    });\n\n    _defineProperty(this, \"handleSubmit\", e => {\n      e.preventDefault();\n      this.clearForm();\n      e.target.checkValidity();\n      console.log(e.target.checkValidity());\n    });\n\n    _defineProperty(this, \"clearForm\", () => this.setState({\n      first_name: \"\",\n      last_name: \"\",\n      email: \"\",\n      password: \"\"\n    }));\n\n    _defineProperty(this, \"saveToState\", e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    });\n  }\n\n  render() {\n    return __jsx(StyledForm, {\n      method: \"post\",\n      noValidate: true,\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }, __jsx(\"input\", {\n      type: \"text\",\n      name: \"first_name\",\n      required: true,\n      value: this.state.first_name,\n      placeholder: \"First Name\",\n      onChange: this.saveToState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }\n    }), __jsx(\"div\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    }, \"First Name cannot be empty\")), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, __jsx(\"input\", {\n      type: \"text\",\n      name: \"last_name\",\n      required: true,\n      value: this.state.last_name,\n      placeholder: \"Last Name\",\n      onChange: this.saveToState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }), __jsx(\"div\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, \"Last Name cannot be empty\")), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, __jsx(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      required: true,\n      value: this.state.email,\n      placeholder: \"Email\",\n      onChange: this.saveToState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }), __jsx(\"div\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }, \"Looks like this is not an email\")), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, __jsx(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      required: true,\n      pattern: \"^(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z])(?!.*\\\\s).*$\",\n      title: \"Please include at least 1 uppercase character, 1 lowercase character, and 1 number.\",\n      autoComplete: \"suggested-password\",\n      value: this.state.password,\n      placeholder: \"Password\",\n      onChange: this.saveToState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }), __jsx(\"div\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }, \"Password cannot be empty\")), __jsx(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, \"Claim your free Trial\"), __jsx(StyledTerms, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, \"By clicking the button you are agreeing to our\", \" \", __jsx(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, \"Terms and Services\")));\n  }\n\n}\n\nconst StyledForm = styled.form.withConfig({\n  displayName: \"Form__StyledForm\",\n  componentId: \"sc-11jr08r-0\"\n})([\"display:grid;grid-template-rows:1fr;grid-gap:25px;place-items:center;width:70%;min-width:250px;margin:0 auto;background:white;padding:20px;border-radius:10px;box-shadow:0 6px rgba(0,0,0,0.3);div{width:100%;.error{font-size:1rem;text-align:end;opacity:0;color:\", \";}}input,button{padding:10px;border-radius:5px;.invalid input:invalid::placeholder{color:\", \";}.invalid input:invalid{border:2px solid \", \";}.invalid input:invalid + .error{opacity:1;}}.invalid input:invalid{border:2px solid \", \";background:url(\\\"/icon-error.svg\\\");background-size:20px;background-repeat:no-repeat;background-position:90%;}input{width:100%;border:2px solid lightgray;}input:active,input:focus{border:2px solid \", \";}button{width:100%;text-transform:uppercase;background:\", \";color:white;box-shadow:inset 0 -5px hsl(154,59%,41%);border:1px solid transparent;cursor:pointer;:active{box-shadow:inset 0 -2px hsl(154,59%,41%);transform:translateY(2px);}}\"], props => props.theme.red, props => props.theme.red, props => props.theme.red, props => props.theme.red, props => props.theme.grayishBlue, props => props.theme.green);\nexport default Form;","map":{"version":3,"sources":["C:/Users/ged-it/Documents/GitHub/signup-landing/src/components/Form.js"],"names":["React","Fragment","styled","StyledTerms","Form","Component","first_name","last_name","email","password","e","preventDefault","clearForm","target","checkValidity","console","log","setState","name","value","render","handleSubmit","state","saveToState","StyledForm","form","props","theme","red","grayishBlue","green"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport StyledTerms from \"./styles/StyledTerms\";\r\nclass Form extends React.Component {\r\n  state = {\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.clearForm();\r\n    e.target.checkValidity();\r\n    console.log(e.target.checkValidity());\r\n  };\r\n  clearForm = () =>\r\n    this.setState({\r\n      first_name: \"\",\r\n      last_name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n    });\r\n  saveToState = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  render() {\r\n    return (\r\n      <StyledForm method=\"post\" noValidate onSubmit={this.handleSubmit}>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            name=\"first_name\"\r\n            required\r\n            value={this.state.first_name}\r\n            placeholder=\"First Name\"\r\n            onChange={this.saveToState}\r\n          />\r\n          <div className={\"error\"}>First Name cannot be empty</div>\r\n        </div>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            name=\"last_name\"\r\n            required\r\n            value={this.state.last_name}\r\n            placeholder=\"Last Name\"\r\n            onChange={this.saveToState}\r\n          />\r\n          <div className={\"error\"}>Last Name cannot be empty</div>\r\n        </div>\r\n\r\n        <div>\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            required\r\n            value={this.state.email}\r\n            placeholder=\"Email\"\r\n            onChange={this.saveToState}\r\n          />\r\n          <div className={\"error\"}>Looks like this is not an email</div>\r\n        </div>\r\n        <div>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            required\r\n            pattern=\"^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?!.*\\s).*$\"\r\n            title=\"Please include at least 1 uppercase character, 1 lowercase character, and 1 number.\"\r\n            autoComplete=\"suggested-password\"\r\n            value={this.state.password}\r\n            placeholder={\"Password\"}\r\n            onChange={this.saveToState}\r\n          />\r\n          <div className=\"error\">Password cannot be empty</div>\r\n        </div>\r\n\r\n        <button type=\"submit\">Claim your free Trial</button>\r\n        <StyledTerms>\r\n          By clicking the button you are agreeing to our{\" \"}\r\n          <a>Terms and Services</a>\r\n        </StyledTerms>\r\n      </StyledForm>\r\n    );\r\n  }\r\n}\r\n\r\nconst StyledForm = styled.form`\r\n  display: grid;\r\n  grid-template-rows: 1fr;\r\n  grid-gap: 25px;\r\n  place-items: center;\r\n  width: 70%;\r\n  min-width: 250px;\r\n  margin: 0 auto;\r\n  background: white;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  box-shadow: 0 6px rgba(0, 0, 0, 0.3);\r\n  div {\r\n    width: 100%;\r\n    .error {\r\n      font-size: 1rem;\r\n      text-align: end;\r\n      opacity: 0;\r\n      color: ${(props) => props.theme.red};\r\n    }\r\n  }\r\n\r\n  input,\r\n  button {\r\n    padding: 10px;\r\n    border-radius: 5px;\r\n    .invalid input:invalid::placeholder {\r\n      color: ${(props) => props.theme.red};\r\n    }\r\n    .invalid input:invalid {\r\n      border: 2px solid ${(props) => props.theme.red};\r\n    }\r\n    .invalid input:invalid + .error {\r\n      opacity: 1;\r\n    }\r\n  }\r\n\r\n  .invalid input:invalid {\r\n    border: 2px solid ${(props) => props.theme.red};\r\n    background: url(\"/icon-error.svg\");\r\n    background-size: 20px;\r\n    background-repeat: no-repeat;\r\n    background-position: 90%;\r\n  }\r\n\r\n  input {\r\n    width: 100%;\r\n    border: 2px solid lightgray;\r\n  }\r\n\r\n  input:active,\r\n  input:focus {\r\n    border: 2px solid ${(props) => props.theme.grayishBlue};\r\n  }\r\n  button {\r\n    width: 100%;\r\n    text-transform: uppercase;\r\n    background: ${(props) => props.theme.green};\r\n    color: white;\r\n    box-shadow: inset 0 -5px hsl(154, 59%, 41%);\r\n    border: 1px solid transparent;\r\n    cursor: pointer;\r\n    :active {\r\n      box-shadow: inset 0 -2px hsl(154, 59%, 41%);\r\n      transform: translateY(2px);\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Form;\r\n"]},"metadata":{},"sourceType":"module"}